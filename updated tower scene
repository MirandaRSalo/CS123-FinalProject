int x;
int y;

boolean click;


void setup() {
  size(500, 700);
  click = false;
}

void draw() {
  background(155, 157, 197);
  backtail();
  pushMatrix();
  translate(390, 453);
  scale(0.9);
  translate(-205, -326);
  tower();
  brick();
  greens();
  flowers();
  popMatrix();
  pushMatrix();
  translate(180, 820);
  translate(0, -555);
  dragon();
  if (click==true) {
    pushMatrix();
    //scale(2.1);
   translate(70, 472);
    fill(255);
    ellipse(-85, -94, 18, 12);
    fill(0);
    ellipse(-85, -94, 12, 12);
    fill(238, 133, 38);
    //Eye
    popMatrix();
  }
  popMatrix();
}

void backtail() {
  pushMatrix();
  scale(0.7);
  noStroke();
  pushMatrix();
  translate(258, 933);
  //scale(0.5);
  translate(0, -555);
  fill(238, 133, 38);
  quad(350, 375, 207, 322, 230, 375, 330, 424);
  triangle(207, 318, 160, 340, 230, 375);
  pushMatrix();
  translate(220, 355);
  rotate(radians(20));
  translate(-190, -355);
  arc(190, 355, 80, 80, 3*PI/4, 7*PI/4);
  popMatrix();
  pushMatrix();
  translate(280, 352);
  rotate(radians(22));
  translate(-273, -322);
  arc(273, 322, 155, 50, -PI, 0);
  popMatrix();
  quad(350, 376, 330, 424, 350, 453, 400, 453);
  fill(155, 157, 197);
  arc(320, 456, 60, 95, -PI/2, PI/2);
  pushMatrix();
  translate(195, 405);
  rotate(radians(70));
  translate(-190, -355);
  arc(190, 355, 150, 150, 3*PI/4, 7*PI/4);
  popMatrix();
  fill(243, 226, 126);
  triangle(320, 410, 329, 410, 335, 416);

  fill(#CB6D1B);
  stroke(#CB6D1B);
  pushMatrix();
  translate(135, 560);
  scale(1.5);
  quad(-5, -20, -10, -25, 50, -100, 50, -95);//LeftSkinny
  triangle(120, -60, 50, -100, 50, -95);//RightSkinny

  fill(243, 226, 126, 100);
  quad(-5, -20, 50, -95, 40, -40, 5, -15);//LeftBigger
  triangle(50, -95, 40, -40, 60, -40);//Middle
  triangle(50, -95, 60, -40, 80, -50);
  triangle(50, -95, 80, -50, 120, -60);//RightBigger
  popMatrix();
  //fill(0);
  //ellipse(342,393,20,20);
  popMatrix();
  popMatrix();
}

void dragon() {
  pushMatrix();
  scale(0.7);
  fill(238, 133, 38);
  pushMatrix();
  translate(-45, 570);
  rotate(radians(-20));
  translate(50, -565);
  ellipse(-50, 565, 90, 60);
  popMatrix();
  ellipse(0, 555, 100, 90);
  //head
  quad(50, 545, 85, 535, 105, 595, 24, 592);
  //neck
  ellipse(210, 560, 300, 125);
  //body
  quad(245, 527, 320, 500, 385, 562, 315, 596);
  arc(350, 487, 120, 200, -PI/4, PI/4);
  pushMatrix();
  translate(370, 550);
  rotate(radians(-40));
  translate(-368, -550);
  arc( 368, 550, 88, 40, -PI/4, PI);
  popMatrix();
  pushMatrix();
  translate(360, 410);
  rotate(radians(55));
  translate(-380, -420);
  arc(380, 420, 120, 50, -5*PI/6, PI/6);
  popMatrix();
  quad(320, 500, 350, 453, 400, 453, 385, 562);
  fill(155, 157, 197);
  pushMatrix();
  translate(326, 458);
  rotate(radians(28));
  translate(-320, -453);
  arc(320, 453, 40, 95, -PI/9, PI/4);
  popMatrix();
  //tail
  noStroke();
  fill(243, 226, 126);
  triangle(-80, 558, -78, 528, -60, 544);
  //horn
  triangle(0, 510, 10, 490, 20, 513);
  triangle(-30, 518, -23, 490, -10, 510);
  triangle(30, 520, 47, 510, 46, 536);
  triangle(60, 543, 62, 520, 76, 534);
  triangle(86, 504, 101, 518, 84, 526);
  triangle(116, 492, 130, 508, 112, 513);
  triangle(147, 485, 160, 502, 142, 505);
  triangle(179, 481, 190, 498, 172, 500);
  triangle(210, 480, 220, 498, 202, 498);
  triangle(242, 482, 250, 500, 232, 498);
  triangle(273, 484, 280, 504, 262, 501);
  triangle(299, 486, 310, 505, 292, 508);
  triangle(320, 480, 335, 481, 322, 499);
  triangle(334, 457, 350, 455, 341, 473);
  triangle(335, 437, 344, 425, 350, 443);
  triangle(198, 330, 204, 344, 216, 332);
  triangle(228, 337, 232, 354, 244, 347);
  //spikes
  triangle(85, 595, 84, 602, 70, 594);
  triangle(83, 601, 82, 608, 68, 600);
  triangle(81, 607, 80, 614, 66, 606);
  //frontclaws
  triangle(219, 595, 218, 602, 204, 594);
  triangle(218, 601, 217, 608, 203, 600);
  triangle(216, 607, 215, 614, 201, 606);
  //backclaws
  fill(246, 214, 2);
  arc(0, 540, 60, 30, 3*PI/2, 2*PI);
  //ear
  fill(182, 25, 33);
  pushMatrix();
  translate(-75, 570);
  rotate(radians(38));
  translate(90, -561);
  ellipse(-90, 561, 10, 20);
  popMatrix();
  //nostril
  fill(205, 109, 0);
  pushMatrix();
  translate(150, 595);
  rotate(radians(-30));
  translate(-150, -600);
  ellipse(150, 600, 70, 40);
  popMatrix();
  ellipse(115, 605, 40, 30);
  quad(105, 594, 108, 618, 80, 615, 85, 595);
  //front leg
  ellipse(300, 590, 90, 60);
  ellipse(260, 600, 50, 40);
  quad(240, 590, 243, 615, 215, 615, 220, 595);
  //backleg
  stroke(0);
  noFill();
  arc(-20, 535, 25, 25, PI/3, PI);
  //eyelid
  arc(-60, 570, 90, 50, 0, 2*PI/3);
  //mouth
  line(-30, 529, -10, 520);
  //eyebrow
  fill(#CB6D1B);
  stroke(#CB6D1B);
  pushMatrix();
  translate(155, 560);
  scale(1.5);
  quad(-5, -20, -10, -25, 50, -100, 50, -95);//LeftSkinny
  triangle(120, -60, 50, -100, 50, -95);//RightSkinny

  fill(243, 226, 126, 100);
  quad(-5, -20, 50, -95, 40, -40, 5, -15);//LeftBigger
  triangle(50, -95, 40, -40, 60, -40);//Middle
  triangle(50, -95, 60, -40, 80, -50);
  triangle(50, -95, 80, -50, 120, -60);//RightBigger
  popMatrix();
  popMatrix();
  //LeftWing
}

void flowers() {
  flower(190, 551);
  flower(180, 580);
  flower(220, 540);
  flower(225, 520);
  flower(230, 493);
  flower(220, 590);
  flower(230, 470);
  flower(214, 566);
  flower(237, 576);
  flower(236, 554);
  flower(192, 598);
  flower(178, 285);
  flower(214, 279);
  flower(158, 375);
  flower(238, 266);
  flower(198, 266);
  flower(175, 266);
  flower(159, 287);
  flower(197, 291);
  flower(188, 312);
  flower(179, 323);
  flower(171, 309);
  flower(161, 328);
  flower(169, 352);
  flower(239, 292);
  flower(229, 311);
  flower(233, 329);
  flower(224, 339);
  flower(229, 354);
  flower(236, 375);
  flower(228, 400);
  flower(238, 421);
  flower(199, 577);
}

void tower() {
  noStroke();
  fill(216, 190, 182);
  quad(155, 250, 240, 250, 240, 600, 155, 600);
  fill(98, 70, 106);
  beginShape();
  curveVertex(143, 189);
  curveVertex(138, 230);
  curveVertex(128, 189);
  curveVertex(169, 195);
  curveVertex(201, 193);
  curveVertex(263, 189);
  curveVertex(241, 251);
  curveVertex(200, 252);
  curveVertex(177, 251);
  curveVertex(161, 251);
  curveVertex(148, 236);
  curveVertex(160, 254);
  curveVertex(150, 250);
  curveVertex(146, 246);
  curveVertex(125, 211);
  endShape();
  fill(244, 216, 194);
  quad(121, 113, 267, 113, 263, 190, 128, 190);
  fill(139, 107, 171);
  triangle(112, 116, 194, 17, 276, 115);
  fill(179, 129, 130);
  ellipse(194, 20, 20, 10);
  triangle(187, 20, 194, -60, 201, 20);
  fill(217, 216, 166);
  ellipse(194, -10, 16, 16);
  ellipse(194, -22, 10, 10);
  fill(179, 129, 130);
  quad(160, 60, 228, 60, 240, 74, 148, 74);
  fill(194, 112, 94);
  quad(141, 130, 246, 130, 247, 179, 140, 179);
  fill(133, 56, 89);
  quad(127, 190, 264, 190, 264, 200, 127, 200);
  quad(145, 133, 242, 133, 243, 175, 144, 175);
  quad(127, 200, 141, 200, 162, 251, 148, 251);
  quad(249, 200, 263, 200, 243, 251, 230, 252);
  quad(160, 200, 174, 200, 189, 252, 178, 252);
  quad(215, 200, 229, 200, 217, 252, 207, 252);
  quad(192, 200, 200, 200, 200, 252, 192, 252);
  fill(203, 138, 138);
  quad(147, 250, 244, 250, 242, 260, 149, 260);
}

void greens() {
  noStroke();
  fill(142, 148, 122);
  beginShape();
  curveVertex(155, 250);
  curveVertex(178, 260);
  curveVertex(206, 260);
  curveVertex(240, 262);
  curveVertex(232, 278);
  curveVertex(209, 287);
  curveVertex(197, 301);
  curveVertex(193, 324);
  curveVertex(181, 337);
  curveVertex(165, 368);
  curveVertex(158, 390);
  curveVertex(155, 399);
  curveVertex(155, 385);
  curveVertex(155, 372);
  curveVertex(155, 359);
  curveVertex(155, 341);
  curveVertex(155, 324);
  curveVertex(154, 297);
  curveVertex(154, 278);
  curveVertex(154, 260);
  curveVertex(154, 250);
  endShape(CLOSE);
  beginShape();
  curveVertex(155, 600);
  curveVertex(164, 583);
  curveVertex(177, 564);
  curveVertex(207, 522);
  curveVertex(216, 501);
  curveVertex(226, 473);
  curveVertex(235, 442);
  curveVertex(238, 428);
  curveVertex(239, 476);
  curveVertex(239, 580);
  curveVertex(240, 600);
  curveVertex(204, 601);
  curveVertex(175, 602);
  curveVertex(155, 602);
  curveVertex(239, 600);
  endShape(CLOSE);
  beginShape();
  curveVertex(238, 429);
  curveVertex(225, 418);
  curveVertex(220, 404);
  curveVertex(228, 382);
  curveVertex(227, 362);
  curveVertex(220, 346);
  curveVertex(221, 311);
  curveVertex(230, 299);
  curveVertex(235, 280);
  curveVertex(238, 276);
  curveVertex(239, 308);
  curveVertex(239, 334);
  curveVertex(239, 370);
  curveVertex(239, 398);
  curveVertex(239, 426);
  curveVertex(238, 424);
  endShape(CLOSE);
}

void bricks(int x, int y) {
  pushMatrix();
  translate(x, y);
  translate(-160, -450);
  stroke(142, 107, 110);
  noFill();
  quad(155, 445, 173, 445, 173, 455, 155, 455);
  popMatrix();
}

void flower(int x, int y) {
  pushMatrix();
  translate(x, y);
  scale(0.3);
  translate(-398, -531/2);
  noStroke();
  petal2();
  petal3();
  petal4();
  petal5();
  petal6();
  petal1();
  noStroke();
  fill(170, 94, 253);
  ellipse(398, 531/2, 12, 12);
  popMatrix();
}

void petal1() {
  pushMatrix();
  translate(398, 531/2);
  translate(-398, -531/2);
  fill(184, 41, 113);
  stroke(196, 8, 32);
  beginShape();
  curveVertex(395, 265);
  curveVertex(395, 263);
  curveVertex(393, 254);
  curveVertex(393, 250);
  curveVertex(396, 245);
  curveVertex(402, 244);
  curveVertex(406, 248);
  curveVertex(406, 252);
  curveVertex(404, 258);
  curveVertex(403, 261);
  curveVertex(402, 267);
  endShape(CLOSE);
  popMatrix();
}

void petal2() {
  pushMatrix();
  translate(398, 531/2);
  rotate(radians(60));
  translate(-398, -531/2);
  fill(184, 41, 113);
  stroke(196, 8, 32);
  beginShape();
  curveVertex(395, 265);
  curveVertex(395, 263);
  curveVertex(393, 254);
  curveVertex(393, 250);
  curveVertex(396, 245);
  curveVertex(402, 244);
  curveVertex(406, 248);
  curveVertex(406, 252);
  curveVertex(404, 258);
  curveVertex(403, 261);
  curveVertex(402, 267);
  endShape(CLOSE);
  popMatrix();
}

void petal3() {
  pushMatrix();
  translate(398, 531/2);
  rotate(radians(120));
  translate(-398, -531/2);
  fill(184, 41, 113);
  stroke(196, 8, 32);
  beginShape();
  curveVertex(395, 265);
  curveVertex(395, 263);
  curveVertex(393, 254);
  curveVertex(393, 250);
  curveVertex(396, 245);
  curveVertex(402, 244);
  curveVertex(406, 248);
  curveVertex(406, 252);
  curveVertex(404, 258);
  curveVertex(403, 261);
  curveVertex(402, 267);
  endShape(CLOSE);
  popMatrix();
}

void petal4() {
  pushMatrix();
  translate(398, 531/2);
  rotate(radians(180));
  translate(-398, -531/2);
  fill(184, 41, 113);
  stroke(196, 8, 32);
  beginShape();
  curveVertex(395, 265);
  curveVertex(395, 263);
  curveVertex(393, 254);
  curveVertex(393, 250);
  curveVertex(396, 245);
  curveVertex(402, 244);
  curveVertex(406, 248);
  curveVertex(406, 252);
  curveVertex(404, 258);
  curveVertex(403, 261);
  curveVertex(402, 267);
  endShape(CLOSE);
  popMatrix();
}

void petal5() {
  pushMatrix();
  translate(398, 531/2);
  rotate(radians(240));
  translate(-398, -531/2);
  fill(184, 41, 113);
  stroke(196, 8, 32);
  beginShape();
  curveVertex(395, 265);
  curveVertex(395, 263);
  curveVertex(393, 254);
  curveVertex(393, 250);
  curveVertex(396, 245);
  curveVertex(402, 244);
  curveVertex(406, 248);
  curveVertex(406, 252);
  curveVertex(404, 258);
  curveVertex(403, 261);
  curveVertex(402, 267);
  endShape(CLOSE);
  popMatrix();
}

void petal6() {
  pushMatrix();
  translate(398, 531/2);
  rotate(radians(300));
  translate(-398, -531/2);
  fill(184, 41, 113);
  stroke(196, 8, 32);
  beginShape();
  curveVertex(395, 265);
  curveVertex(395, 263);
  curveVertex(393, 254);
  curveVertex(393, 250);
  curveVertex(396, 245);
  curveVertex(402, 244);
  curveVertex(406, 248);
  curveVertex(406, 252);
  curveVertex(404, 258);
  curveVertex(403, 261);
  curveVertex(402, 267);
  endShape(CLOSE);
  popMatrix();
}

void brick() {
  bricks(160, 590);
  bricks(178, 590);
  bricks(196, 590);
  bricks(214, 590);
  bricks(169, 580);
  bricks(187, 580);
  bricks(205, 580);
  bricks(160, 570);
  bricks(178, 570);
  bricks(196, 570);
  bricks(214, 570);
  bricks(169, 560);
  bricks(187, 560);
  bricks(205, 560);
  bricks(160, 550);
  bricks(178, 550);
  bricks(196, 550);
  bricks(214, 550);
  bricks(169, 540);
  bricks(187, 540);
  bricks(205, 540);
  bricks(160, 530);
  bricks(178, 530);
  bricks(196, 530);
  bricks(214, 530);
  bricks(169, 520);
  bricks(187, 520);
  bricks(205, 520);
  bricks(160, 510);
  bricks(178, 510);
  bricks(196, 510);
  bricks(214, 510);
  bricks(169, 500);
  bricks(187, 500);
  bricks(205, 500);
  bricks(160, 490);
  bricks(178, 490);
  bricks(196, 490);
  bricks(214, 490);
  bricks(169, 480);
  bricks(187, 480);
  bricks(205, 480);
  bricks(160, 470);
  bricks(178, 470);
  bricks(196, 470);
  bricks(214, 470);
  bricks(169, 460);
  bricks(187, 460);
  bricks(205, 460);
  bricks(160, 450);
  bricks(178, 450);
  bricks(196, 450);
  bricks(214, 450);
  bricks(169, 440);
  bricks(187, 440);
  bricks(205, 440);
  bricks(160, 430);
  bricks(178, 430);
  bricks(196, 430);
  bricks(214, 430);
  bricks(169, 420);
  bricks(187, 420);
  bricks(205, 420);
  bricks(160, 410);
  bricks(178, 410);
  bricks(196, 410);
  bricks(214, 410);
  bricks(169, 400);
  bricks(187, 400);
  bricks(205, 400);
  bricks(160, 390);
  bricks(178, 390);
  bricks(196, 390);
  bricks(214, 390);
  bricks(169, 380);
  bricks(187, 380);
  bricks(205, 380);
  bricks(160, 370);
  bricks(178, 370);
  bricks(196, 370);
  bricks(214, 370);
  bricks(169, 360);
  bricks(187, 360);
  bricks(205, 360);
  bricks(160, 350);
  bricks(178, 350);
  bricks(196, 350);
  bricks(214, 350);
  bricks(169, 340);
  bricks(187, 340);
  bricks(205, 340);
  bricks(160, 330);
  bricks(178, 330);
  bricks(196, 330);
  bricks(214, 330);
  bricks(169, 320);
  bricks(187, 320);
  bricks(205, 320);
  bricks(160, 310);
  bricks(178, 310);
  bricks(196, 310);
  bricks(214, 310);
  bricks(169, 300);
  bricks(187, 300);
  bricks(205, 300);
  bricks(160, 290);
  bricks(178, 290);
  bricks(196, 290);
  bricks(214, 290);
}
void mousePressed() {
  println(mouseX + "," + mouseY);
  if (mouseX>119&&mouseX<465&&mouseY>626&&mouseY<height) {
    click = true;
  } else {
    click = false ;
  }
}
